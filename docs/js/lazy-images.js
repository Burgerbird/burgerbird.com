/* minified */
class ResponsiveImageLoader{constructor(t={}){this.options={rootMargin:t.rootMargin||"100px",transitionDuration:t.transitionDuration||"0.5s",transitionEffect:t.transitionEffect||"opacity",defaultFormat:t.defaultFormat||"webp",lazyLoad:void 0===t.lazyLoad||t.lazyLoad,lowQualityOnSlowNetwork:void 0===t.lowQualityOnSlowNetwork||t.lowQualityOnSlowNetwork,fallbackImage:t.fallbackImage,observeNetworkChanges:void 0===t.observeNetworkChanges||t.observeNetworkChanges},this.networkSpeed=this.detectNetworkSpeed(),this.observedImages=new Set,this.init(),this.options.observeNetworkChanges&&this.options.lowQualityOnSlowNetwork&&this.observeNetworkChanges()}init(){this.applyToImages(document.querySelectorAll("img[data-from][data-to][data-steps]"))}detectNetworkSpeed(){return navigator.connection&&"string"==typeof navigator.connection.effectiveType?navigator.connection.effectiveType:null}applyToImages(t){t.forEach((t=>{this.observedImages.has(t)||this.setupImage(t)}))}setupImage(t){this.options.lazyLoad&&t.setAttribute("loading","lazy"),t.style.transition=`${this.options.transitionEffect} ${this.options.transitionDuration} ease-out`,t.style.opacity=.5,this.setupIntersectionObserver(t),this.observedImages.add(t)}setupIntersectionObserver(t){if("IntersectionObserver"in window){const e=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting&&(this.loadOptimalImage(t.target),e.unobserve(t.target))}))}),{rootMargin:this.options.rootMargin});e.observe(t)}else this.loadOptimalImage(t)}loadOptimalImage(t){t.clientWidth;const e=this.calculateOptimalSize(t,this.networkSpeed),o=this.constructImagePath(t,e),a=new Image;a.onload=()=>{t.src=o,t.style.opacity=1,this.observedImages.add(t)},a.onerror=()=>{this.options.fallbackImage&&(t.src=this.options.fallbackImage),console.error(`Failed to load image: ${o}, using fallback or original src.`),this.observedImages.add(t)},a.src=o}calculateOptimalSize(t,e){let o=t.clientWidth;this.options.lowQualityOnSlowNetwork&&["slow-2g","2g","3g"].includes(e)&&(o*=.75);const a=parseInt(t.getAttribute("data-from"),10),i=parseInt(t.getAttribute("data-to"),10),s=parseInt(t.getAttribute("data-steps"),10),n=t.getAttribute("data-special")?t.getAttribute("data-special").split(",").map((t=>parseInt(t,10))):[];let r=this.generateSizeArray(a,i,s).concat(n);return r=[...new Set(r)].sort(((t,e)=>t-e)),r.find((t=>t>=o))||r[r.length-1]}generateSizeArray(t,e,o){let a=[];for(let i=t;i<=e;i+=o)a.push(i);return a}constructImagePath(t,e){return`${t.src.split("/").slice(0,-1).join("/")}/${e}.${t.getAttribute("data-format")||this.options.defaultFormat}`}observeNetworkChanges(){navigator.connection&&"function"==typeof navigator.connection.addEventListener&&navigator.connection.addEventListener("change",(()=>{this.networkSpeed=this.detectNetworkSpeed(),this.observedImages.forEach((t=>{t.complete&&0!==t.naturalWidth||this.loadOptimalImage(t)}))}))}refreshImages(){const t=document.querySelectorAll("img[data-from][data-to][data-steps]:not([data-observed])");this.applyToImages(t)}}document.addEventListener("DOMContentLoaded",(()=>{new ResponsiveImageLoader({rootMargin:"50px",transitionDuration:"0.8s",defaultFormat:"jpeg",lazyLoad:!0,lowQualityOnSlowNetwork:!0,observeNetworkChanges:!0})}));